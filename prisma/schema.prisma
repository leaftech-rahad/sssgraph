// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// datasource db {
//   provider = "sqlite"
//   url      = "file:./dev.db"
// }

// datasource db {
//   provider = "mongodb"
//   url      = env("DATABASE_URL")
// }

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//---------------------------------------------------------
//mongodb
// model User {
//   id        String   @id @default(auto()) @map("_id") @db.ObjectId
//   name      String
//   email     String   @unique
//   username  String   @unique
//   password  String
//   phone     String
//   address   String
//   role      Role     @default(Member)
//   post      Post[]   @relation("writtenPost")
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

// enum Role {
//   Admin
//   Member
//   Student
// }

// model Post {
//   id        String   @id @default(auto()) @map("_id") @db.ObjectId
//   username  String?
//   author    User?    @relation("writtenPost", references: [username], fields: [username])
//   title     String
//   content   String
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

//----------------------------------------------
//postgres
model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  username  String   @unique
  password  String
  phone     String
  address   String
  role      Role     @default(Member)
  post      Post[]   @relation("writtenPost")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([username])
}

enum Role {
  Admin
  Member
  Student
}

model Post {
  id        String   @id @default(uuid())
  username  String?
  author    User?    @relation("writtenPost", references: [username], fields: [username])
  title     String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

//--------------------------------------------------
//sqlite3
// model User {
//   id        String   @id @default(uuid())
//   name      String
//   email     String   @unique
//   username  String   @unique
//   password  String
//   phone     String
//   address   String
//   role      String   @default("Member")
//   post      Post[]   @relation("writtenPost")
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt

//   @@index([username])
// }

// model Post {
//   id        String   @id @default(uuid())
//   username  String?
//   author    User?    @relation("writtenPost", references: [username], fields: [username])
//   title     String
//   content   String
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }
